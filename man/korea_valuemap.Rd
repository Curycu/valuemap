% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valuemap.R
\name{korea_valuemap}
\alias{korea_valuemap}
\title{Making colored map with data.frame of Korea administrative area code}
\usage{
korea_valuemap(
  data,
  map = providers$OpenStreetMap,
  legend.cut = NULL,
  palette = "Blues",
  show.text = TRUE,
  text.color = "black",
  text.format = function(x) x,
  code.digit = 7
)
}
\arguments{
\item{data}{A data.frame object who has "code" & "value" columns ("value" column must be numeric type)}

\item{map}{A map name of leaflet::providers}

\item{legend.cut}{A numeric vector which means color legend boundary values}

\item{palette}{A color name of RColorBrewer palettes}

\item{show.text}{A boolean who determines showing "value" number on center of polygons}

\item{text.color}{A color name for "value" number text on center of polygons}

\item{text.format}{A format function for "value" number text on center of polygons}

\item{code.digit}{A integer meaning korea administrative area code type}
}
\value{
An Leaflet object.
}
\description{
This function make a Leaflet object.
You can easily visualize your data.frame with "code" column based on "value" column.
You have options :
  background map (= map)
  color legend boundary values (= legend.cut)
  color palette for color legend (= palette)
  showing "value" number on center of polygons (= show.text)
  color for "value" number text on center of polygons (= text.color)
  administrative area code type by digit (= code.digit)
}
\examples{
if (interactive()){
  suwon <-
    korea \%>\%
      filter(substring(hcode_7, 1, 4) == '3101') \%>\%
      as.data.frame \%>\%
      transmute(
        code = hcode_7,
        value = as.numeric(hcode_7) \%\% 3101 / 10)

  suwon \%>\%
    korea_valuemap(
      legend.cut=c(10,20,30,40),
      show.text=FALSE
    )
}
}
